#!/bin/bash

function usage() {
    cat <<EOF

Provision a VM from a template using local storage.

Usage: ${0##*/} -h HOST -t TEMPLATE -v VM

-h    name label (host name) of XenServer host on which to provision the VM
-t    name label of the VM template to be copied
-v    name label of the new VM
EOF
    exit 2
}

while getopts :h:t:v: OPT; do
    case $OPT in
        h)
            HOST="$OPTARG"
            ;;
        t)
            TEMPLATE="$OPTARG"
            ;;
        v)
            VM="$OPTARG"
            ;;
        *)
            usage
    esac
done
shift $(( OPTIND - 1 ))
[ -n "$1" ] && usage
[ -z "$HOST" ] || [ -z "$TEMPLATE" ] || [ -z "$VM" ] && usage

SR_UUID=$(xe sr-list params=uuid name-label='Local storage' host="$HOST" --minimal)
if [ -z "$SR_UUID" ]; then
    echo "Storage repository \"Local storage\" on host $HOST not found"
    exit 1
fi
echo "SR UUID: $SR_UUID"

TEMPLATE_UUID=$(xe template-list params=uuid name-label="$TEMPLATE"  --minimal)
if [ -z "TEMPLATE_UUID" ]; then
    echo "Template \"$TEMPLATE\" not found"
    exit 1
fi
echo "Template UUID: $TEMPLATE_UUID"

echo -e "Creating $VM...\c"
VM_UUID=$(xe vm-install sr-uuid="$SR_UUID" template="$TEMPLATE_UUID" new-name-label="$VM")
if [ -n "$VM_UUID" ]; then
    echo -e "done.\nVM UUID: $VM_UUID"
    VDI_UUID=$(xe vbd-list params=vdi-uuid device=xvda vm-uuid=$VM_UUID --minimal)
    if [ -n "$VDI_UUID" ]; then
        echo "VDI_UUID: $VDI_UUID"
        echo -e "Renaming VDI...\c"
        if xe vdi-param-set name-label="$VM" uuid="$VDI_UUID"; then
            echo "done."
        fi
    else
        echo "Error: VDI not found"
        exit 1
    fi
fi
