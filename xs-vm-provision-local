#!/bin/bash

function usage() {
    cat <<EOF

Provision a VM from a fully populated template using local storage.

Usage: ${0##*/} [-h HOST] -t TEMPLATE VM

-h    name label (host name) of XenServer host on which to provision the VM
-t    name label of the VM template to be copied
VM    name label of the new VM
EOF
    exit 2
}

MYDIR=$(dirname $0)
XS_FUNCTIONS="$MYDIR/xs-functions"
if ! . "$XS_FUNCTIONS"; then
    echo "Error while sourcing $XS_FUNCTIONS."
    exit 1
fi

initialize HOST TEMPLATE VM
while getopts :h:t: OPT; do
    case $OPT in
        h)
            HOST="$OPTARG"
            ;;
        t)
            TEMPLATE="$OPTARG"
            ;;
        *)
            usage
    esac
done
shift $(( OPTIND - 1 ))
VM="$1"
shift
[ -n "$1" ] && usage
have_required TEMPLATE VM || usage

[ -n "$HOST" ] || HOST=$(hostname)
SR_UUID=$(get_uuid sr "Local storage" host "$HOST") || exit 1
echo "SR UUID: $SR_UUID"

TEMPLATE_UUID=$(get_uuid template "$TEMPLATE") || exit 1
echo "Template UUID: $TEMPLATE_UUID"

echo -e "Creating $VM...\c"
VM_UUID=$(xe vm-install sr-uuid="$SR_UUID" template="$TEMPLATE_UUID" new-name-label="$VM")
[ -z "$VM_UUID" ] && exit 1
echo -e "done.\nVM UUID: $VM_UUID"
VBD_UUIDS=$(get_uuids vbd "" vm-uuid "$VM_UUID")
for VBD_UUID in $VBD_UUIDS; do
    VDI_UUID=$(get_param vbd "$VBD_UUID" vdi-uuid) || exit 1
    if [ "$VDI_UUID" == '<not in database>' ]; then
        continue
    else
        READ_ONLY=$(get_param vdi "$VDI_UUID" read-only) || exit 1
        [ "$READ_ONLY" == "true" ] && continue
        echo "VDI UUID: $VDI_UUID"
        echo -e "Renaming VDI...\c"
        if set_params vdi "$VDI_UUID" name-label "$VM"; then
            echo "done."
        fi
    fi
done
