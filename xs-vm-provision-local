#!/bin/bash

function usage() {
    cat <<EOF

Provision a VM from a template using local storage.

Usage: ${0##*/} -t TEMPLATE -v VM [-h HOST]

-t    name label of the VM template to be copied
-v    name label of the new VM
-h    name label (host name) of XenServer host on which to provision the VM
EOF
    exit 2
}

MYDIR=$(dirname $0)
XS_FUNCTIONS="$MYDIR/xs-functions"
if ! . "$XS_FUNCTIONS"; then
    echo "Error while sourcing $XS_FUNCTIONS."
    exit 1
fi

initialize HOST TEMPLATE VM
while getopts :h:t:v: OPT; do
    case $OPT in
        h)
            HOST="$OPTARG"
            ;;
        t)
            TEMPLATE="$OPTARG"
            ;;
        v)
            VM="$OPTARG"
            ;;
        *)
            usage
    esac
done
shift $(( OPTIND - 1 ))
[ -n "$1" ] && usage
REQUIRED=("TEMPLATE" "VM" )
have_required "${REQUIRED[@]}" || usage

[ -n "$HOST" ] || HOST=$(hostname)
get_local_sr_uuid "$HOST" || exit 1
echo "SR UUID: $SR_UUID"

get_uuid template "$TEMPLATE"
TEMPLATE_UUID="$UUID"
[ -n "$TEMPLATE_UUID" ] || exit 1
echo "Template UUID: $TEMPLATE_UUID"

echo -e "Creating $VM...\c"
VM_UUID=$(xe vm-install sr-uuid="$SR_UUID" template="$TEMPLATE_UUID" new-name-label="$VM")
[ -z "$VM_UUID" ] && exit 1
echo -e "done.\nVM UUID: $VM_UUID"
vm_vbd_uuids "$VM_UUID"
for VBD_UUID in ${VBD_UUIDS[@]}; do
    vbd_vdi_uuid "$VBD_UUID"
    if [ "$VDI_UUID" == '<not in database>' ];then
        continue
    else
        echo "VDI UUID: $VDI_UUID"
        echo -e "Renaming VDI...\c"
        if xe vdi-param-set name-label="$VM" uuid="$VDI_UUID"; then
            echo "done."
        fi
    fi
done
